[{"D:\\GitHub\\React\\react-forms-input\\src\\index.js":"1","D:\\GitHub\\React\\react-forms-input\\src\\App.js":"2","D:\\GitHub\\React\\react-forms-input\\src\\components\\SimpleInput.js":"3","D:\\GitHub\\React\\react-forms-input\\src\\hooks\\use-input.js":"4","D:\\GitHub\\React\\react-forms-input\\src\\components\\InputField1.js":"5","D:\\GitHub\\React\\react-forms-input\\src\\components\\InputField2.js":"6","D:\\GitHub\\React\\react-forms-input\\src\\components\\BasicForm.js":"7"},{"size":179,"mtime":1648643023000,"results":"8","hashOfConfig":"9"},{"size":408,"mtime":1658569480853,"results":"10","hashOfConfig":"9"},{"size":2480,"mtime":1658569149935,"results":"11","hashOfConfig":"9"},{"size":715,"mtime":1658558999085,"results":"12","hashOfConfig":"9"},{"size":1600,"mtime":1658567839774,"results":"13","hashOfConfig":"9"},{"size":2665,"mtime":1658568040938,"results":"14","hashOfConfig":"9"},{"size":3115,"mtime":1658570869656,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"19p9a7j",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GitHub\\React\\react-forms-input\\src\\index.js",[],["32","33"],"D:\\GitHub\\React\\react-forms-input\\src\\App.js",["34","35","36"],"D:\\GitHub\\React\\react-forms-input\\src\\components\\SimpleInput.js",["37"],"import { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,// asign alias as diffrent name\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== ''); // regular JS function is passed and executed at use-input.js side\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,// asign alias as diffrent name\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes('@'));\n\n\n  let formIsValid = false;\n\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    // setEnteredNameTouch(true);\n    // setEnteredEmailTouch(true);\n\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    console.log(enteredEmail);\n\n    // setEnteredName(\"\");\n    // setEnteredNameTouch(false);\n    resetNameInput();\n\n    // setEnteredEmail(\"\");\n    // setEnteredEmailTouch(false);\n    resetEmailInput();\n  };\n\n  const nameInputClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const emailInputClasses = emailInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && (\n          <p className=\"error-text\">name must not be empty.</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputHasError && (\n          <p className=\"error-text\">Please enter a valid email.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n","D:\\GitHub\\React\\react-forms-input\\src\\hooks\\use-input.js",[],"D:\\GitHub\\React\\react-forms-input\\src\\components\\InputField1.js",[],"D:\\GitHub\\React\\react-forms-input\\src\\components\\InputField2.js",[],"D:\\GitHub\\React\\react-forms-input\\src\\components\\BasicForm.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":19},{"ruleId":"42","severity":1,"message":"46","line":2,"column":8,"nodeType":"44","messageId":"45","endLine":2,"endColumn":19},{"ruleId":"42","severity":1,"message":"47","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":19},{"ruleId":"42","severity":1,"message":"48","line":1,"column":10,"nodeType":"44","messageId":"45","endLine":1,"endColumn":18},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'SimpleInput' is defined but never used.","Identifier","unusedVar","'InputField1' is defined but never used.","'InputField2' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]